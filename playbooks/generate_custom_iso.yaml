---
- name: Embed Kickstart and all files needed in ISO
  hosts:
    - localhost
  gather_facts: yes
  become: yes
  vars:
    iso_build_path: "/home/{{ ansible_user }}/iso-build"
    iso_rhde_installer: "/tmp/768cf5f2-bebd-45e5-a058-6b7b88f75a34-installer.iso"
    iso_dst_path: "/var/www/html/iso"
    iso_2_build_name: "laptop-rhel84"
    ansible_user: pgoku
  tasks:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "/home/{{ ansible_user }}/mnt/{{iso_2_build_name }}"
        - "{{ iso_build_path }}/{{iso_2_build_name }}"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/DevicesGRUBs"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/ansible-content"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/container-images"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/files"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/ipxe"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/kickstarts"
        - "{{ iso_build_path }}/{{iso_2_build_name }}/rpms"
        - "{{ iso_dst_path }}/{{iso_2_build_name }}"

    - name: Restore context on directory
      ansible.builtin.command: "restorecon -R /var/www/html/iso/{{iso_2_build_name }}"
      changed_when: true

    - name: Mount the ISO
      ansible.posix.mount:
        path: "/home/{{ ansible_user }}/mnt/{{iso_2_build_name }}"
        src: "{{ iso_rhde_installer }}"
        opts: loop
        state: ephemeral
        fstype: iso9660

    - name: Create target directory for copying ISO contents
      ansible.builtin.file:
        path: "{{ iso_build_path }}/{{ iso_2_build_name }}"
        state: directory
      become: no

    - name: Copy ISO contents to temporary directory using rsync
      ansible.builtin.synchronize:
        src: "/home/{{ ansible_user }}/mnt/{{iso_2_build_name }}/"
        dest: "{{ iso_build_path }}/{{ iso_2_build_name }}"
        recursive: yes
        mode: push
        copy_links: yes
        archive: yes
      become: yes

    - name: Change ownership of ISO build directory to the user running the playbook
      ansible.builtin.file:
        path: "{{ iso_build_path }}/{{ iso_2_build_name }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes
      become: yes

    - name: Restore context on directory
      ansible.builtin.command: "restorecon -R {{ iso_build_path }}/{{ iso_2_build_name }}"
      changed_when: true

    - name: Get ISO label
      shell: blkid "{{ iso_rhde_installer }}" | awk -F 'LABEL="' '{print $2}' | cut -d '"' -f 1
      register: iso_label

    - name: Set the truncated ISO label for Joliet
      debug:
        msg: "{{ iso_label  }}"


    - name: Create the final ISO image
      shell: mkisofs -o {{ iso_dst_path }}/{{ iso_2_build_name }}/{{ iso_2_build_name }}.iso -b isolinux/isolinux.bin -J -R -l -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img -no-emul-boot -graft-points -V "{{ iso_label.stdout }}" "{{ iso_build_path }}/{{ iso_2_build_name }}"
      changed_when: false
      args:
        chdir: "{{ iso_build_path }}/{{ iso_2_build_name }}"
      become: yes

    - name: Add MD5 checksum
      shell: implantisomd5 {{ iso_dst_path }}/{{ iso_2_build_name }}/{{ iso_2_build_name }}.iso
      changed_when: false
      become: yes

    - name: Change ownership of ISO build directory to the user running the playbook
      ansible.builtin.file:
        path: "{{ iso_build_path }}/{{ iso_2_build_name }}"
        owner: "apache"
        group: "apache"
        recurse: yes
      become: yes

    - name: Mount the ISO
      ansible.posix.mount:
        path: "/home/{{ ansible_user }}/mnt/{{iso_2_build_name }}"
        src: "{{ iso_rhde_installer }}"
        opts: loop
        state: unmounted
      become: yes

    - name: Clean up temporary directories
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/home/{{ ansible_user }}/mnt/{{iso_2_build_name }}"
        - "{{ iso_build_path }}"
      become: yes

    - ansible.builtin.debug:
        msg: "Download the ISO from http://{{ ansible_facts[ansible_interfaces[1]].ipv4.address }}/iso/{{iso_2_build_name }}/{{ iso_2_build_name }}.iso"
...
