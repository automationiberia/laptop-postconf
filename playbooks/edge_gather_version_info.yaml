---
- name: Fetch and parse rpm-ostree status
  hosts: edge_servers
  gather_facts: no
  vars:
    ansible_host: "{{ dhcp_ip }}"
    image_nickname_map:
      "2f6b6b63ec593e57f347c88441c3bd1d53fce8d00a55970d6a6925f829f589f9":
        name: "nvidia-rhel84"
        version: "1.0.13"
      "62cc7845e1b6c2c6f62119f92cf630cab2e5e290177bad5c8a59e0eea1b14ab1":
        name: "image1-rhel84"
        version: "1.0.2"
      "d75a5aa049371087bb6fd0ac9be2e1ae6985b1c327985998d426f89c42aec4de":
        name: "image1-rhel84"
        version: "1.0.5"

  tasks:

    - name: Get rpm-ostree status as JSON
      command: rpm-ostree status --json
      register: ostree_output
      changed_when: false

    - name: Parse JSON output
      set_fact:
        deployments: "{{ ostree_output.stdout | from_json }}"

    - name: Extract deployment data with image_nicer_name
      set_fact:
        deployments_list: []

    - name: Append each deployment with image nickname
      set_fact:
        deployments_list: >-
          {{ deployments_list + [
            {
              'id': item.id,
              'osname': item.osname,
              'version': item.version,
              'checksum': item.checksum,
              'booted': item.booted,
              'pinned': item.pinned,
              'origin': item.origin,
              'timestamp': item.timestamp,
              'image_nicer_name': image_nickname_map[item.checksum]['name'] | default('Unknown'),
              'image_nicer_version': image_nickname_map[item.checksum]['version'] | default('Unknown')
            }
          ] }}
      loop: "{{ deployments.deployments }}"

    - name: Store host-specific data in hostvars
      set_fact:
        ostree_host_data:
          "{{ { inventory_hostname: { 'ostree_list_deployments': deployments_list } } }}"

- name: Merge deployment data from all hosts
  hosts: localhost
  gather_facts: no
  tasks:

    - name: Collect all deployment data
      set_fact:
        merged_ostree_data: "{{ merged_ostree_data | default({}) | combine(hostvars[item].ostree_host_data) }}"
      loop: "{{ groups['all'] }}"
      when: "'ostree_host_data' in hostvars[item]"

    - name: Save merged deployment data to YAML file
      copy:
        content: "{{ merged_ostree_data | to_nice_yaml }}"
        dest: "/tmp/rpm_ostree_status.yml"
        mode: "0644"

    - name: Display the file path
      debug:
        msg: "Merged deployment data saved to /tmp/rpm_ostree_status.yml on the control node."

